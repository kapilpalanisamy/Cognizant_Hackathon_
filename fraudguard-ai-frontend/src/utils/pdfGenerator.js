import jsPDF from 'jspdf';

export const generateFraudReport = (prediction, selectedFile) => {
  const pdf = new jsPDF();
  
  // Add title
  pdf.setFontSize(20);
  pdf.setTextColor(40, 40, 40);
  pdf.text('Fraud Detection Analysis Report', 20, 30);

  // Add subtitle
  pdf.setFontSize(12);
  pdf.setTextColor(80, 80, 80);
  pdf.text(`Generated on: ${new Date().toLocaleString()}`, 20, 40);

  // Add image preview if available
  if (selectedFile && selectedFile.type.startsWith('image/')) {
    const reader = new FileReader();
    reader.onload = function(e) {
      const imgData = e.target.result;
      pdf.addImage(imgData, 'JPEG', 150, 20, 40, 40);
      pdf.text('Claim Image', 150, 65);
    };
    reader.readAsDataURL(selectedFile);
  }

  // Add image info
  pdf.setFontSize(14);
  pdf.setTextColor(40, 40, 40);
  pdf.text('Image Information', 20, 60);

  pdf.setFontSize(11);
  pdf.setTextColor(60, 60, 60);
  pdf.text(`File Name: ${selectedFile.name}`, 25, 70);
  pdf.text(`File Size: ${(selectedFile.size / 1024 / 1024).toFixed(2)} MB`, 25, 80);
  
  // Add prediction results
  pdf.setFontSize(14);
  pdf.setTextColor(40, 40, 40);
  pdf.text('Analysis Results', 20, 100);
  

  // Prediction
  pdf.setFontSize(16);
  let predColor = prediction.prediction === 'FRAUD' ? [255, 0, 0] : [0, 128, 0];
  pdf.setTextColor(...predColor);
  pdf.text(`Prediction: ${prediction.prediction}`, 25, 115);
  
  pdf.setFontSize(12);
  pdf.setTextColor(60, 60, 60);
  pdf.text(`Confidence: ${prediction.confidence}%`, 25, 125);
  
  // Add prediction results
  pdf.setFontSize(14);
  pdf.setTextColor(40, 40, 40);
  pdf.text('Analysis Results', 20, 100);

  // Prediction
  pdf.setFontSize(16);
  const predictionColor = prediction.prediction === 'FRAUD' ? [255, 0, 0] : [0, 128, 0];
  pdf.setTextColor(...predictionColor);
  pdf.text(`Prediction: ${prediction.prediction}`, 25, 115);

  pdf.setFontSize(12);
  pdf.setTextColor(60, 60, 60);
  pdf.text(`Confidence: ${prediction.confidence}%`, 25, 125);
  pdf.text(`Risk Level: ${prediction.riskLevel}`, 25, 135);

  // Detailed Risk Assessment
  pdf.setFontSize(13);
  pdf.setTextColor(200, 0, 0);
  pdf.text('Risk Assessment:', 25, 145);
  pdf.setFontSize(11);
  pdf.setTextColor(60, 60, 60);
  pdf.text(`Category: ${prediction.riskLevel}`, 30, 155);
  pdf.text(`Recommended Action: ${prediction.recommendedAction}`, 30, 165);

  // Probabilities
  pdf.setFontSize(12);
  pdf.setTextColor(40, 40, 40);
  pdf.text('Probability Breakdown:', 25, 180);
  pdf.setFontSize(11);
  pdf.setTextColor(60, 60, 60);
  pdf.text(`• Fraud Probability: ${prediction.fraudProbability}%`, 30, 190);
  pdf.text(`• Non-Fraud Probability: ${prediction.nonFraudProbability}%`, 30, 200);

  // Processing Details
  pdf.setFontSize(13);
  pdf.setTextColor(40, 40, 40);
  pdf.text('Processing Details', 20, 215);
  pdf.setFontSize(11);
  pdf.setTextColor(60, 60, 60);
  pdf.text(`Processing Time: ${prediction.processingTime}`, 25, 225);
  pdf.text(`Model Architecture: EfficientNet-B1`, 25, 235);
  pdf.text(`Input Resolution: 224x224`, 25, 245);

  // Model information
  pdf.setFontSize(13);
  pdf.setTextColor(40, 40, 40);
  pdf.text('Model Information', 20, 260);
  pdf.setFontSize(11);
  pdf.setTextColor(60, 60, 60);
  pdf.text('Model: Fast Precision EfficientNet-B1', 25, 270);
  pdf.text('Precision: 87.9%', 25, 275);
  pdf.text('Recall: 86.0%', 25, 280);
  pdf.text('Accuracy: 91.4%', 25, 285);

  // Footer
  pdf.setFontSize(8);
  pdf.setTextColor(120, 120, 120);
  pdf.text('Generated by FraudGuard AI - Insurance Fraud Detection System', 20, 295);

  // Save the PDF
  const fileName = `fraud-analysis-${selectedFile.name.split('.')[0]}-${Date.now()}.pdf`;
  pdf.save(fileName);
  return fileName;